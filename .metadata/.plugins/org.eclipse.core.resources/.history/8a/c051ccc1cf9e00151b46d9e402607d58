package com.bomber.entities;

import java.util.ArrayList;

import com.badlogic.gdx.math.Vector2;
import com.badlogic.gdx.utils.Array;
import com.bomber.*;
import handlers.*;

/** INFORMAÇÕES SOBRE A INTELIGÊNCIA ARTIFICIAL
 * 1) Verificar quantos inimigos existem vivos
 * a) Caso tenham três vivos:
 *  
 * 
 * 
 * 2) Verificar posição do bomberman
 * 3) Verificar posição de bombas no campo
 *  */

public class Bagura {
	
	int numVivos;
	
	Enemy enemy1;
	Enemy enemy2;
	Enemy enemy3;
	
	private ArrayList<Bomb> bombs;
	
	public Bagura(Enemy e1, Enemy e2, Enemy e3) {
		numVivos = 3;
		this.enemy1 = e1;
		this.enemy2 = e2;
		this.enemy3 = e3;
		bombs = new ArrayList<Bomb>();
	}
	
	public void movimentarInimigos(Player player, MyContactListener cl) {		
		Enemy s;
		
		// Verificar quantos inimigos estão vivos
		if(numVivos == 3) {
			
			
		} else if (numVivos == 2) {
			
			
		} else {
			// Verificando quem está vivo
			
			
			
			// Verificando as posições do inimigo em relação ao jogador
			
		}
		
		
		
		
	}
	
	/** Retorna uma matriz com 0 aonde não existe bomba e 1 aonde existe */
	private int[][] posicaoBombas() {
		int[][] posicao = new int[13][13];
		
		for(int i = 0; i < 13; i++) 
			for(int j = 0; j < 13; j++) 
				posicao[i][j] = 0;
				
		for(Bomb b : bombs) 
			posicao[(int)(b.getPosition().x-16)/32][(int)(b.getPosition().y-16)/32] = 1;
		
		return posicao;
	}
	
	/** Coisa rosa */
	private void moveEnemy1() {
		
	}
	
	/** Fantasma estranho */
	private void moveEnemy2() {
		
	}
	
	/** Morcego da hora */
	private void moveEnemy3() {
		
	}
	
	public int getNumVivos() { return numVivos; }
	public void morreu() { numVivos--; }
	
}
